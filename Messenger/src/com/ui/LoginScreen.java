/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ui;
import com.socket.*;
import java.awt.Color;
import javax.swing.DefaultListModel;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JList;
/**
 *
 * @author Simanta
 */
public class LoginScreen extends javax.swing.JFrame {

    public String serverAddress;
    public int port;
    public static SocketClient client;
    public static Thread clientThread;
    public static String username;
    public String password;
    public LoginScreen screen;
    public static DefaultListModel model;
    public File file;
    public static chatWindow[][] chatwindow = new chatWindow[101][101];
    public int index;
    public String tar = new String();
    chatWindow cw;
    public static boolean arr[][] = new boolean[101][101];
    public int index2;
    int cnt2 = 0;
    public chatWindow mes;
    int cnt = 0;
    public LoginScreen[][] chatPane = new LoginScreen[101][101];
    public LoginScreen() {
        initComponents();
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportBorder(null);
        
        
        userList.setBorder(null);
        userList.setBackground(new Color(0, 0, 0, 0));
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setBorder(null);
        jScrollPane2.setViewportBorder(null);
        
        fileBox.setVisible(false);
        browseButton.setVisible(false);
        messageScreen.setBorder(null);
        messageScreen.setBackground(new Color(0, 0, 0, 0));
        usernameField.setOpaque(false);
        messageScreen.setVisible(true);
        userList.setModel((model = new DefaultListModel()));
        model.addElement("All");
        for(int i = 0; i < 100; i++)
            for(int j = 0; j < 100; j++)
                arr[i][j] = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPanel = new javax.swing.JPanel();
        userNotFoundLabel = new javax.swing.JLabel();
        userFoundLabel = new javax.swing.JLabel();
        passwordSignup = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        usernameSignup = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        signupButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        chatPanel = new javax.swing.JPanel();
        onlineUser = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageScreen = new javax.swing.JTextArea();
        messageBox = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        fileBox = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        fileSendButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Triply Messenger");
        setPreferredSize(new java.awt.Dimension(815, 485));
        getContentPane().setLayout(null);

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginPanel.setMinimumSize(new java.awt.Dimension(800, 465));
        loginPanel.setPreferredSize(new java.awt.Dimension(800, 450));
        loginPanel.setLayout(null);

        userNotFoundLabel.setForeground(new java.awt.Color(255, 51, 51));
        loginPanel.add(userNotFoundLabel);
        userNotFoundLabel.setBounds(100, 370, 190, 20);

        userFoundLabel.setForeground(new java.awt.Color(255, 0, 51));
        loginPanel.add(userFoundLabel);
        userFoundLabel.setBounds(510, 380, 200, 20);

        passwordSignup.setBackground(new java.awt.Color(211, 211, 211));
        passwordSignup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordSignup.setBorder(null);
        loginPanel.add(passwordSignup);
        passwordSignup.setBounds(480, 218, 250, 40);

        confirmPassword.setBackground(new java.awt.Color(211, 211, 211));
        confirmPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confirmPassword.setBorder(null);
        confirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordActionPerformed(evt);
            }
        });
        loginPanel.add(confirmPassword);
        confirmPassword.setBounds(480, 266, 250, 40);

        registerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ui/signupButton.jpg"))); // NOI18N
        registerButton.setContentAreaFilled(false);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        loginPanel.add(registerButton);
        registerButton.setBounds(480, 318, 250, 40);

        usernameSignup.setBackground(new java.awt.Color(211, 211, 211));
        usernameSignup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameSignup.setBorder(null);
        loginPanel.add(usernameSignup);
        usernameSignup.setBounds(480, 168, 250, 40);

        connectButton.setBackground(new java.awt.Color(255, 255, 255));
        connectButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        connectButton.setForeground(new java.awt.Color(255, 255, 255));
        connectButton.setText("Connect");
        connectButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        connectButton.setContentAreaFilled(false);
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        loginPanel.add(connectButton);
        connectButton.setBounds(10, 10, 20, 30);

        usernameField.setBackground(new java.awt.Color(211, 211, 211));
        usernameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameField.setToolTipText("");
        usernameField.setBorder(null);
        usernameField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });
        loginPanel.add(usernameField);
        usernameField.setBounds(69, 190, 250, 40);

        passwordField.setBackground(new java.awt.Color(211, 211, 211));
        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordField.setBorder(null);
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        loginPanel.add(passwordField);
        passwordField.setBounds(70, 244, 250, 40);

        signupButton.setBackground(new java.awt.Color(255, 255, 255));
        signupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ui/loginButton.jpg"))); // NOI18N
        signupButton.setPreferredSize(new java.awt.Dimension(97, 31));
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });
        loginPanel.add(signupButton);
        signupButton.setBounds(70, 300, 250, 50);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ui/backImage.jpg"))); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(810, 460));
        loginPanel.add(jLabel4);
        jLabel4.setBounds(0, -10, 800, 460);

        getContentPane().add(loginPanel);
        loginPanel.setBounds(0, 0, 800, 465);

        chatPanel.setMinimumSize(new java.awt.Dimension(880, 500));
        chatPanel.setPreferredSize(new java.awt.Dimension(800, 450));
        chatPanel.setLayout(null);

        onlineUser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        onlineUser.setForeground(new java.awt.Color(255, 255, 255));
        onlineUser.setText("Online Users");
        chatPanel.add(onlineUser);
        onlineUser.setBounds(30, 10, 80, 14);

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));
        chatPanel.add(nameLabel);
        nameLabel.setBounds(334, 10, 180, 0);

        userList.setForeground(new java.awt.Color(255, 255, 255));
        userList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userList);

        chatPanel.add(jScrollPane1);
        jScrollPane1.setBounds(10, 30, 130, 410);

        messageScreen.setEditable(false);
        messageScreen.setColumns(20);
        messageScreen.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        messageScreen.setForeground(new java.awt.Color(255, 255, 255));
        messageScreen.setRows(5);
        jScrollPane2.setViewportView(messageScreen);

        chatPanel.add(jScrollPane2);
        jScrollPane2.setBounds(150, 30, 640, 330);
        chatPanel.add(messageBox);
        messageBox.setBounds(150, 370, 570, 80);

        sendButton.setBackground(new java.awt.Color(255, 255, 255));
        sendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ui/send-512.png"))); // NOI18N
        sendButton.setBorder(null);
        sendButton.setBorderPainted(false);
        sendButton.setContentAreaFilled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        chatPanel.add(sendButton);
        sendButton.setBounds(730, 390, 57, 40);
        chatPanel.add(fileBox);
        fileBox.setBounds(200, 420, 520, 20);

        browseButton.setText("[...]");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });
        chatPanel.add(browseButton);
        browseButton.setBounds(150, 420, 40, 23);

        fileSendButton.setText("File");
        fileSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSendButtonActionPerformed(evt);
            }
        });
        chatPanel.add(fileSendButton);
        fileSendButton.setBounds(210, 460, 50, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ui/chatGroupBack.jpg"))); // NOI18N
        chatPanel.add(jLabel1);
        jLabel1.setBounds(0, -40, 890, 530);

        getContentPane().add(chatPanel);
        chatPanel.setBounds(0, 0, 800, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        serverAddress = "192.168.0.102"; port = 80;
        
        
            try{
                client = new SocketClient(this);
                clientThread = new Thread(client);
                clientThread.start();
                client.send(new Message("test", "testUser", "testContent", "SERVER", index, index2));
            }
            catch(Exception ex){
                
            }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        username = usernameField.getText();
        password = passwordField.getText();
        
        //index = Integer.parseInt(username);
        //client.getIndex(index);
        
        mes = new chatWindow(this, client, username);
        if(!username.isEmpty() && !password.isEmpty()){
            client.send(new Message("login", username, password, "SERVER", index, index2));
        }
                if(client.flag == true) {
                    System.out.println("Time pass");
                    cnt++;
                }
                
                if(client.flag == false) {
                    System.out.println("Time pass");
                    cnt++;
                }
                if(client.flag == false && cnt == 2) {
                    loginPanel.setVisible(false);
                    chatPanel.setVisible(true);
                }
                else if(client.flag == true && cnt == 2) {
                    System.out.println("Username not Found");
                    userNotFoundLabel.setText("**User not Found");
                }
            
            
            System.out.println(Character.getNumericValue(username.charAt(0)));
            
    }//GEN-LAST:event_signupButtonActionPerformed
    public void getSendButton(String msg1) {
       // String msg = messageBox.getText();
        String target = userList.getSelectedValue().toString();
        
        
        index = Character.getNumericValue(username.charAt(0));
        index2 = Character.getNumericValue(target.charAt(0));
        //client.getIndexes(index, index2);
        
        if(!msg1.isEmpty() ){
            messageBox.setText("");
            String hu = chatwindow[index][index2].nameLabel.getText();
            client.send(new Message("message", username, msg1, hu, index, index2));
            System.out.println(index + "  " + index2);
        }
        /*if(arr[index][index2] == false) {
                chatwindow[index][index2] = new chatWindow();
                arr[index][index2] = true;
            
                chatwindow[index][index2].setVisible(true);
            }
        client.getFrame(chatwindow, index, index2);*/
        
    }
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String msg = messageBox.getText();
        String target = userList.getSelectedValue().toString();
        
        
        //index = Character.getNumericValue(username.charAt(0));
        //index2 = Character.getNumericValue(target.charAt(0));
        //client.getIndexes(index, index2);
        
        if(!msg.isEmpty() && !target.isEmpty()){
            messageBox.setText("");
            
                client.send(new Message("message", username, msg, target, index, index2));
                System.out.println(index + "  " + index2);
            
            
        }
        /*if(arr[index][index2] == false) {
                chatwindow[index][index2] = new chatWindow();
                arr[index][index2] = true;
            
                chatwindow[index][index2].setVisible(true);
            }
        client.getFrame(chatwindow, index, index2);*/
    }//GEN-LAST:event_sendButtonActionPerformed

    private void fileSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSendButtonActionPerformed
        long size = file.length();
            if(size < 120 * 1024 * 1024){
                client.send(new Message("upload_req", username, file.getName(), userList.getSelectedValue().toString(), index, index2));
            }
            else{
                messageScreen.append("File is size too large\n");
            }
    }//GEN-LAST:event_fileSendButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showDialog(this, "Select File");
        file = fileChooser.getSelectedFile();
        
        if(file != null){
            if(!file.getName().isEmpty()){
                fileSendButton.setEnabled(true); String str;
                
                if(fileBox.getText().length() > 30){
                    String t = file.getPath();
                    str = t.substring(0, 20) + " [...] " + t.substring(t.length() - 20, t.length());
                }
                else{
                    str = file.getPath();
                }
                fileBox.setText(str);
            }
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void userListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseClicked
        if(evt.getClickCount() == 2) {
            String target = userList.getSelectedValue().toString();
            
            index = Character.getNumericValue(username.charAt(0));
            index2 = Character.getNumericValue(target.charAt(0));
            messageScreen.setVisible(true);
            if(arr[index][index2] == true && chatwindow[index][index2].isVisible()==false) {
                chatwindow[index][index2].setVisible(true);
            }
            System.out.println("user mouse");
            if(arr[index][index2] == false) {
                chatwindow[index][index2] = new chatWindow(this, client, username);
                chatwindow[index2][index] = chatwindow[index][index2];
                arr[index][index2] = true;
                //chatwindow[index][index2] = new chatWindow();
                //chatPane[index][index2].setVisible(true);
               // chatPane[index][index2].messageScreen.setVisible(true);
                
                chatwindow[index][index2].setVisible(true);
                chatwindow[index][index2].nameLabel.setText(target);
            }
            client.getFrame(chatwindow, index, index2);
            
            
        }
        
        
    }//GEN-LAST:event_userListMouseClicked

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        username = usernameSignup.getText();
        password = passwordSignup.getText();
        
        //index = Integer.parseInt(username);
        //client.getIndex(index);
        
        mes = new chatWindow(this, client, username);
        
        if(!username.isEmpty() && !password.isEmpty()){
            client.send(new Message("signup", username, password, "SERVER", index, index2));
        }
                if(client.flag == false) {
                    System.out.println("Time Pass1");
                    cnt2++;
                }
                if(client.flag == true) {
                    System.out.println("Time Pass 1");
                    cnt2++;
                }
                if(client.flag == false && cnt2 == 2) {
                    loginPanel.setVisible(false);
                    chatPanel.setVisible(true);
                }
                if(client.flag == true && cnt2 == 2) {
                    System.out.println("Username Exists");
                    userFoundLabel.setText("**User Found");
                }
                
            
            
            System.out.println(Character.getNumericValue(username.charAt(0)));
    }//GEN-LAST:event_registerButtonActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        username = usernameField.getText();
        password = passwordField.getText();
        
        //index = Integer.parseInt(username);
        //client.getIndex(index);
        
        mes = new chatWindow(this, client, username);
        if(!username.isEmpty() && !password.isEmpty()){
            client.send(new Message("login", username, password, "SERVER", index, index2));
        }
                if(client.flag == true) {
                    cnt++;
                    System.out.println("Time pass");
                }
                
                if(client.flag == false) {
                    cnt++;
                    System.out.println("Time pass");
                }
                if(client.flag == false && cnt == 2) {
                    loginPanel.setVisible(false);
                    chatPanel.setVisible(true);
                }
                else if(client.flag == true && cnt == 2) {
                    System.out.println("Username not Found");
                    userNotFoundLabel.setText("**User not Found");
                }
            
            
            System.out.println(Character.getNumericValue(username.charAt(0)));
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void confirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordActionPerformed
       username = usernameField.getText();
        password = passwordField.getText();
        
        //index = Integer.parseInt(username);
        //client.getIndex(index);
        
        mes = new chatWindow(this, client, username);
        if(!username.isEmpty() && !password.isEmpty()){
            client.send(new Message("login", username, password, "SERVER", index, index2));
        }
                if(client.flag == true) {
                    cnt++;
                    System.out.println("Time pass");
                }
                
                if(client.flag == false) {
                    cnt++;
                    System.out.println("Time pass");
                }
                if(client.flag == false && cnt == 2) {
                    loginPanel.setVisible(false);
                    chatPanel.setVisible(true);
                }
                else if(client.flag == true && cnt == 2) {
                    System.out.println("Username not Found");
                    userNotFoundLabel.setText("**User not Found");
                }
            
            
            System.out.println(Character.getNumericValue(username.charAt(0)));
    }//GEN-LAST:event_confirmPasswordActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginScreen screen = new LoginScreen();
                screen.setVisible(true);
                screen.chatPanel.setVisible(false);
                screen.loginPanel.setVisible(true);
               // screen.messageScreen.setVisible(false);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton browseButton;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JPasswordField confirmPassword;
    public javax.swing.JButton connectButton;
    public javax.swing.JTextField fileBox;
    public javax.swing.JButton fileSendButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel loginPanel;
    public javax.swing.JTextField messageBox;
    public javax.swing.JTextArea messageScreen;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel onlineUser;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordSignup;
    private javax.swing.JButton registerButton;
    public javax.swing.JButton sendButton;
    private javax.swing.JButton signupButton;
    private javax.swing.JLabel userFoundLabel;
    public static javax.swing.JList<String> userList;
    private javax.swing.JLabel userNotFoundLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JTextField usernameSignup;
    // End of variables declaration//GEN-END:variables
}
